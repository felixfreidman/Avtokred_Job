"use strict";function numberWithCommas(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")}var allUncertainSlides=document.querySelectorAll(".uncertain-form__slide"),allUncertainSlidesHeaders=document.querySelectorAll(".slide__header--uncertain"),allDataHeader=[];allUncertainSlidesHeaders.forEach(function(e){e=e.getAttribute("data-slide-header-uncertain");allDataHeader.push(e)});var uncertainFormNavigation=document.getElementById("uncertainNavigation"),listItemUncertainCounter=1;function checkWhatSlideIsShowedInUncertainForm(){allUncertainSlides.forEach(function(e){var t=e.getAttribute("id");t.includes("First")&&e.classList.contains("slide--show")?(document.getElementById("UncertainFirstSlideItem").classList.contains("list-navigation__bullet--active")||document.getElementById("UncertainFirstSlideItem").classList.toggle("list-navigation__bullet--active"),document.getElementById("UncertainSecondSlideItem").classList.contains("list-navigation__bullet--disabled")||document.getElementById("UncertainSecondSlideItem").classList.toggle("list-navigation__bullet--disabled"),document.getElementById("UncertainThirdSlideItem").classList.contains("list-navigation__bullet--disabled")||document.getElementById("UncertainThirdSlideItem").classList.toggle("list-navigation__bullet--disabled")):t.includes("Second")&&e.classList.contains("slide--show")?(document.getElementById("UncertainFirstSlideItem").classList.contains("list-navigation__bullet--completed")||document.getElementById("UncertainFirstSlideItem").classList.toggle("list-navigation__bullet--completed"),document.getElementById("UncertainFirstSlideItem").classList.contains("list-navigation__bullet--active")&&document.getElementById("UncertainFirstSlideItem").classList.toggle("list-navigation__bullet--active"),document.getElementById("UncertainSecondSlideItem").classList.contains("list-navigation__bullet--disabled")&&document.getElementById("UncertainSecondSlideItem").classList.toggle("list-navigation__bullet--disabled"),document.getElementById("UncertainSecondSlideItem").classList.contains("list-navigation__bullet--active")||document.getElementById("UncertainSecondSlideItem").classList.toggle("list-navigation__bullet--active"),document.getElementById("uncertainStatusBar").classList.contains("progress-navigation-bar--33p")||(document.getElementById("uncertainStatusBar").classList.remove("progress-navigation-bar--0p"),document.getElementById("uncertainStatusBar").classList.add("progress-navigation-bar--33p"))):t.includes("Third")&&e.classList.contains("slide--show")&&(document.getElementById("UncertainSecondSlideItem").classList.contains("list-navigation__bullet--completed")||document.getElementById("UncertainSecondSlideItem").classList.toggle("list-navigation__bullet--completed"),document.getElementById("UncertainSecondSlideItem").classList.contains("list-navigation__bullet--active")&&document.getElementById("UncertainSecondSlideItem").classList.toggle("list-navigation__bullet--active"),document.getElementById("UncertainThirdSlideItem").classList.contains("list-navigation__bullet--disabled")&&document.getElementById("UncertainThirdSlideItem").classList.toggle("list-navigation__bullet--disabled"),document.getElementById("UncertainThirdSlideItem").classList.contains("list-navigation__bullet--active")||document.getElementById("UncertainThirdSlideItem").classList.toggle("list-navigation__bullet--active"),document.getElementById("uncertainStatusBar").classList.contains("progress-navigation-bar--33p")&&(document.getElementById("uncertainStatusBar").classList.remove("progress-navigation-bar--33p"),document.getElementById("uncertainStatusBar").classList.add("progress-navigation-bar--95p")))})}allDataHeader.forEach(function(e){var t=document.createElement("li");t.classList.add("list-navigation__bullet");var n=document.createElement("span");n.classList.add("bullet-title"),n.textContent=e,t.append(n);var i="";switch(listItemUncertainCounter){case 1:i="First";break;case 2:i="Second";break;case 3:i="Third";break;case 4:i="Fourth";break;case 5:i="Fifth"}t.id="Uncertain".concat(i,"SlideItem"),listItemUncertainCounter++,uncertainFormNavigation.append(t)});var allNextUncertainBtns=document.querySelectorAll(".btn-uncertain--next");allNextUncertainBtns.forEach(function(i){i.addEventListener("click",function(){var e=i.getAttribute("id"),t="";switch(e=e.replace("Next","")){case"SecondSlide":t="FirstSlide";break;case"ThirdSlide":t="SecondSlide"}var n=document.getElementById(t),e=document.getElementById(e);n.classList.toggle("slide--show"),n.classList.toggle("slide--hidden"),e.classList.toggle("slide--show"),e.classList.toggle("slide--hidden"),checkWhatSlideIsShowedInUncertainForm()})});var allPreviousUncertainBtns=document.querySelectorAll(".btn-uncertain--previous");allPreviousUncertainBtns.forEach(function(i){i.addEventListener("click",function(){var e=i.getAttribute("id"),t="";switch(e=e.replace("Previous","")){case"FirstSlide":t="SecondSlide";break;case"SecondSlide":t="ThirdSlide"}var n=document.getElementById(t),e=document.getElementById(e);n.classList.toggle("slide--show"),n.classList.toggle("slide--hidden"),e.classList.toggle("slide--show"),e.classList.toggle("slide--hidden")})}),checkWhatSlideIsShowedInUncertainForm();var userNameInput=document.getElementById("userName"),userPhoneInput=document.getElementById("userPhone");$(document).ready(function(){$(".submit-button").addClass("submit-button--disabled"),$("#userName").keyup(function(){console.log("yes"),0!=$(this).val().length&&0!=$("#userPhone").val().length&&$(".submit-button").removeClass("submit-button--disabled")}),$("#userPhone").keyup(function(){console.log("yes"),0!=$(this).val().length&&0!=$("#userName").val().length&&$(".submit-button").removeClass("submit-button--disabled")})}),$("#userPhone").inputmask(),$(document).ready(function(){$("#sliderDebt").slider({range:"min",animate:!0,value:5e5,min:1e5,max:435e4,step:1e3,slide:function(e,t){t=numberWithCommas(t=t.value);$("#debtInput").val(t)}}),$("#debtInput").val($("#sliderDebt").slider("option","value")),$("#debtInput").change(function(){$("#sliderDebt").slider("value",$(this).val())}),$("#sliderTime").slider({range:"min",animate:!0,value:3,min:1,max:8,step:1,slide:function(e,t){var n=t.value;switch(n){case 1:n="".concat(n," год");break;case 2:case 3:case 4:n="".concat(n," года");break;default:n="".concat(n," лет")}$("#timeInput").val(n)}}),$("#timeInput").val($("#sliderTime").slider("option","value"));var e=$("#timeInput").val(),e="".concat(e," года");$("#timeInput").val(e),$("#timeInput").change(function(){$("#sliderTime").slider("value",$(this).val())}),$("#sliderIncome").slider({range:"min",animate:!0,value:3e4,min:1e4,max:5e5,step:5e3,slide:function(e,t){t=numberWithCommas(t=t.value);$("#incomeInput").val(t)}}),$("#incomeInput").val($("#sliderIncome").slider("option","value")),$("#incomeInput").change(function(){$("#sliderIncome").slider("value",$(this).val())}),$("#sliderInvest").slider({range:"min",animate:!0,value:1e5,min:0,max:4e5,step:1e3,slide:function(e,t){t=numberWithCommas(t=t.value);$("#investInput").val(t)}}),$("#investInput").val($("#sliderInvest").slider("option","value")),$("#investInput").change(function(){$("#sliderInvest").slider("value",$(this).val())})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vbi5qcyIsImNvbXBvbmVudHMuanMiXSwibmFtZXMiOlsibnVtYmVyV2l0aENvbW1hcyIsIngiLCJ0b1N0cmluZyIsInJlcGxhY2UiLCJhbGxVbmNlcnRhaW5TbGlkZXMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJhbGxVbmNlcnRhaW5TbGlkZXNIZWFkZXJzIiwiYWxsRGF0YUhlYWRlciIsImZvckVhY2giLCJoZWFkZXIiLCJzbGlkZUhlYWRlciIsImdldEF0dHJpYnV0ZSIsInB1c2giLCJ1bmNlcnRhaW5Gb3JtTmF2aWdhdGlvbiIsImdldEVsZW1lbnRCeUlkIiwibGlzdEl0ZW1VbmNlcnRhaW5Db3VudGVyIiwiY2hlY2tXaGF0U2xpZGVJc1Nob3dlZEluVW5jZXJ0YWluRm9ybSIsInNsaWRlIiwic2xpZGVJRCIsImluY2x1ZGVzIiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJ0b2dnbGUiLCJyZW1vdmUiLCJhZGQiLCJuZXdMaXN0SXRlbSIsImNyZWF0ZUVsZW1lbnQiLCJuZXdMaXN0SXRlbUhlYWRlciIsInRleHRDb250ZW50IiwiYXBwZW5kIiwibGV0dGVyZWRDb3VudGVyIiwiaWQiLCJjb25jYXQiLCJhbGxOZXh0VW5jZXJ0YWluQnRucyIsImJ1dHRvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJuZXh0U2xpZGVJRCIsInNsaWRlQWN0aXZlIiwic2xpZGVOZXh0IiwiYWxsUHJldmlvdXNVbmNlcnRhaW5CdG5zIiwidXNlck5hbWVJbnB1dCIsInVzZXJQaG9uZUlucHV0IiwiJCIsInJlYWR5IiwiYWRkQ2xhc3MiLCJrZXl1cCIsImNvbnNvbGUiLCJsb2ciLCJ0aGlzIiwidmFsIiwibGVuZ3RoIiwicmVtb3ZlQ2xhc3MiLCJpbnB1dG1hc2siLCJzbGlkZXIiLCJyYW5nZSIsImFuaW1hdGUiLCJ2YWx1ZSIsIm1pbiIsIm1heCIsInN0ZXAiLCJldmVudCIsInVpIiwiZGVidFZhbHVlIiwiY2hhbmdlIiwidGltZVZhbHVlIl0sIm1hcHBp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QUFXLE9BQUEsU0FBQSxVQUNBLElBQUFXLEVBQUF0QixFQUFBLGNBQUFPLE1BRUFlLEVBQUEsR0FBQWhDLE9BQUFnQyxFQUFBLFNBRUF0QixFQUFBLGNBQUFPLElBQUFlLEdBQ0F0QixFQUFBLGNBQUFxQixPQUFBLFdBQ0FyQixFQUFBLGVBQUFXLE9BQUEsUUFBQVgsRUFBQU0sTUFBQUMsU0FFQVAsRUFBQSxpQkFBQVcsT0FBQSxDQUNBQyxNQUFBLE1BQ0FDLFNBQUEsRUFDQUMsTUFBQSxJQUNBQyxJQUFBLElBQ0FDLElBQUEsSUFDQUMsS0FBQSxJQUNBMUMsTUFBQSxTQUFBMkMsRUFBQUMsR0FFQUMsRUFBQS9ELGlCQURBK0QsRUFBQUQsRUFBQUwsT0FFQWQsRUFBQSxnQkFBQU8sSUFBQWEsTUFHQXBCLEVBQUEsZ0JBQUFPLElBQUFQLEVBQUEsaUJBQUFXLE9BQUEsU0FBQSxVQUNBWCxFQUFBLGdCQUFBcUIsT0FBQSxXQUNBckIsRUFBQSxpQkFBQVcsT0FBQSxRQUFBWCxFQUFBTSxNQUFBQyxTQUVBUCxFQUFBLGlCQUFBVyxPQUFBLENBQ0FDLE1BQUEsTUFDQUMsU0FBQSxFQUNBQyxNQUFBLElBQ0FDLElBQUEsRUFDQUMsSUFBQSxJQUNBQyxLQUFBLElBQ0ExQyxNQUFBLFNBQUEyQyxFQUFBQyxHQUVBQyxFQUFBL0QsaUJBREErRCxFQUFBRCxFQUFBTCxPQUVBZCxFQUFBLGdCQUFBTyxJQUFBYSxNQUdBcEIsRUFBQSxnQkFBQU8sSUFBQVAsRUFBQSxpQkFBQVcsT0FBQSxTQUFBLFVBQ0FYLEVBQUEsZ0JBQUFxQixPQUFBLFdBQ0FyQixFQUFBLGlCQUFBVyxPQUFBLFFBQUFYLEVBQUFNLE1BQUFDIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAvKlxuLy8gQGF1dGhvcjogZmVsaXhmcmVpZG1hblxuLy8gQG1haWw6IGZlbGl4ZnJlaWRtYW5kZXZAZ21haWwuY29tXG4vLyBAbm90ZTog0LjRidGDINGA0LDQsdC+0YLRg1xuLy8gKi9cbi8vIC8vINCS0YDQtdC80LXQvdC90L7QtSDRgNC10YjQtdC90LjQtSDQtNC10LvQtdC90LjRjyDQvdCwINGA0LDQt9GA0Y/QtNGLLCDQv9C+0YLQvtC8INC80LDRgdC60LAg0LHRg9C00LXRgiDRgNCw0LHQvtGC0LDRgtGMXG5mdW5jdGlvbiBudW1iZXJXaXRoQ29tbWFzKHgpIHtcbiAgICByZXR1cm4geC50b1N0cmluZygpLnJlcGxhY2UoL1xcQig/PShcXGR7M30pKyg/IVxcZCkpL2csIFwiLlwiKTtcbn1cbi8vIC8vINCg0LDQsdC+0YLQsCDQvNC10L3RjiDQuCDRgdC+0LfQtNCw0L3QuNGPINC+0LHRitC10LrRgtCwINC00LvRjyDQsdGD0LTRg9GJ0LXQuSDQv9C10YDQtdC00LDRh9C4LFxuLy8gLy8g0LfQsNGC0LXQvCDRg9C20LUg0YLRgNCw0L3Qv9C40LvRj9GG0LjRjyDQvdCwINCy0LDQttC90YvQtSDQtNCw0L3QvdGL0LVcbi8vIGNvbnN0IGFsbE5leHRCdXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcbi8vICAgICBcIi5mb3JtLW5hdmlnYXRpb25fX2J1dHRvbi0tbmV4dFwiXG4vLyApO1xuLy8gYWxsTmV4dEJ1dHRvbnMuZm9yRWFjaCgoYnV0dG9uKSA9PiB7XG4vLyAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4vLyAgICAgICAgIGxldCBidXR0b25JZCA9IGJ1dHRvbi5pZDtcbi8vICAgICAgICAgYnV0dG9uSWQgPSBidXR0b25JZC5yZXBsYWNlKFwiQnV0dG9uXCIsIFwiXCIpO1xuLy8gICAgICAgICBsZXQgcGFyZW50SWQgPSBidXR0b24ucGFyZW50Tm9kZS5wYXJlbnROb2RlLmlkO1xuLy8gICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChwYXJlbnRJZCkuY2xhc3NMaXN0LnRvZ2dsZShcInNjcmVlbi0taGlkZVwiKTtcbi8vICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocGFyZW50SWQpLmNsYXNzTGlzdC50b2dnbGUoXCJzY3JlZW4tLXNob3dcIik7XG4vLyAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGJ1dHRvbklkKS5jbGFzc0xpc3QudG9nZ2xlKFwic2NyZWVuLS1oaWRlXCIpO1xuLy8gICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChidXR0b25JZCkuY2xhc3NMaXN0LnRvZ2dsZShcInNjcmVlbi0tc2hvd1wiKTtcbi8vICAgICAgICAgY29uc3QgdHlwZXNJbnB1dHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT0nYXV0b1NlbGVjdCddXCIpO1xuLy8gICAgICAgICB0eXBlc0lucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xuLy8gICAgICAgICAgICAgaWYgKGlucHV0LmNoZWNrZWQpIHtcbi8vICAgICAgICAgICAgICAgICBsZXQgY2hlY2tlZE9wdGlvbiA9IGlucHV0LmlkO1xuLy8gICAgICAgICAgICAgICAgIGRldGFpbGVkRm9ybU9iamVjdC50eXBlID0gY2hlY2tlZE9wdGlvbi50b1N0cmluZygpO1xuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICB9KTtcbi8vICAgICAgICAgY29uc3QgY3JlZGl0U3VtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkZWJ0SW5wdXRcIikudmFsdWU7XG4vLyAgICAgICAgIGNvbnNvbGUubG9nKGNyZWRpdFN1bSk7XG4vLyAgICAgICAgIGRldGFpbGVkRm9ybU9iamVjdC5jcmVkaXQgPSBjcmVkaXRTdW0udG9TdHJpbmcoKTtcbi8vICAgICAgICAgY29uc3QgY3JlZGl0VGltZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGltZUlucHV0XCIpLnZhbHVlO1xuLy8gICAgICAgICBkZXRhaWxlZEZvcm1PYmplY3QudGltZSA9IGNyZWRpdFRpbWUudG9TdHJpbmcoKTtcbi8vICAgICAgICAgLy8gY29uc3QgdXNlckluY29tZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaW5jb21lSW5wdXRcIikudmFsdWU7XG4vLyAgICAgICAgIC8vIGRldGFpbGVkRm9ybU9iamVjdC5pbmNvbWUgPSB1c2VySW5jb21lLnRvU3RyaW5nKCk7XG4vLyAgICAgICAgIGNvbnN0IGNyZWRpdEludmVzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaW52ZXN0SW5wdXRcIikudmFsdWU7XG4vLyAgICAgICAgIGRldGFpbGVkRm9ybU9iamVjdC5pbnZlc3QgPSBjcmVkaXRJbnZlc3QudG9TdHJpbmcoKTtcbi8vICAgICAgICAgY29uc29sZS5sb2coZGV0YWlsZWRGb3JtT2JqZWN0KTtcbi8vICAgICB9KTtcbi8vIH0pO1xuLy8gY29uc3QgYWxsUHJldkJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFxuLy8gICAgIFwiLmZvcm0tbmF2aWdhdGlvbl9fYnV0dG9uLS1wcmV2XCJcbi8vICk7XG4vLyBhbGxQcmV2QnV0dG9ucy5mb3JFYWNoKChidXR0b24pID0+IHtcbi8vICAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbi8vICAgICAgICAgbGV0IGJ1dHRvbklkID0gYnV0dG9uLmlkO1xuLy8gICAgICAgICBidXR0b25JZCA9IGJ1dHRvbklkLnJlcGxhY2UoXCJCdXR0b25cIiwgXCJcIik7XG4vLyAgICAgICAgIGxldCBwYXJlbnRJZCA9IGJ1dHRvbi5wYXJlbnROb2RlLnBhcmVudE5vZGUuaWQ7XG4vLyAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHBhcmVudElkKS5jbGFzc0xpc3QudG9nZ2xlKFwic2NyZWVuLS1oaWRlXCIpO1xuLy8gICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChwYXJlbnRJZCkuY2xhc3NMaXN0LnRvZ2dsZShcInNjcmVlbi0tc2hvd1wiKTtcbi8vICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYnV0dG9uSWQpLmNsYXNzTGlzdC50b2dnbGUoXCJzY3JlZW4tLWhpZGVcIik7XG4vLyAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGJ1dHRvbklkKS5jbGFzc0xpc3QudG9nZ2xlKFwic2NyZWVuLS1zaG93XCIpO1xuLy8gICAgIH0pO1xuLy8gfSk7XG4vLyBjb25zdCBkZXRhaWxlZEZvcm1PYmplY3QgPSB7XG4vLyAgICAgdHlwZTogXCJcIixcbi8vICAgICBjcmVkaXQ6IFwiXCIsXG4vLyAgICAgdGltZTogXCJcIixcbi8vICAgICAvLyBpbmNvbWU6IFwiXCIsXG4vLyAgICAgaW52ZXN0OiBcIlwiLFxuLy8gICAgIHVzZXJOYW1lOiBcIlwiLFxuLy8gICAgIHVzZXJQaG9uZTogXCJcIixcbi8vIH07XG4vLyAvLyDQktCw0YDQuNCw0YbQuNGPINGE0L7RgNC80Ysg0LTQu9GPINC90LXQvtC/0YDQtdC00LvQtdC90L3QvtCz0L4g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPXG4vLyBjb25zdCBkZXRhaWxlZEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGV0YWlsZWRGb3JtXCIpO1xuLy8gZGV0YWlsZWRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbi8vICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZpcnN0U2NyZWVuXCIpLmNsYXNzTGlzdC50b2dnbGUoXCJzY3JlZW4tLWhpZGVcIik7XG4vLyAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmaXJzdFNjcmVlblwiKS5jbGFzc0xpc3QudG9nZ2xlKFwic2NyZWVuLS1zaG93XCIpO1xuLy8gICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2Vjb25kU2NyZWVuXCIpLmNsYXNzTGlzdC50b2dnbGUoXCJzY3JlZW4tLWhpZGVcIik7XG4vLyAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZWNvbmRTY3JlZW5cIikuY2xhc3NMaXN0LnRvZ2dsZShcInNjcmVlbi0tc2hvd1wiKTtcbi8vIH0pO1xuLy8gLy8g0JLQtdGA0LjRhNC40LrQsNGG0LjRjyDQt9Cw0L/QvtC70L3QtdC90LjRjyDQtNCw0L3QvdGL0YUg0LIg0YTQvtGA0LzRg1xuLy8gY29uc3QgdXNlck5hbWVJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidXNlck5hbWVcIik7XG4vLyBjb25zdCB1c2VyUGhvbmVJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidXNlclBob25lXCIpO1xuLy8gJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7XG4vLyAgICAgJChcIi5zdWJtaXQtYnV0dG9uXCIpLmFkZENsYXNzKFwiZm9ybS1uYXZpZ2F0aW9uX19idXR0b24tLWRpc2FibGVkXCIpO1xuLy8gICAgICQoXCIjdXNlck5hbWVcIikua2V5dXAoZnVuY3Rpb24oKSB7XG4vLyAgICAgICAgIGNvbnNvbGUubG9nKFwieWVzXCIpO1xuLy8gICAgICAgICBpZiAoJCh0aGlzKS52YWwoKS5sZW5ndGggIT0gMCAmJiAkKFwiI3VzZXJQaG9uZVwiKS52YWwoKS5sZW5ndGggIT0gMCkge1xuLy8gICAgICAgICAgICAgJChcIi5zdWJtaXQtYnV0dG9uXCIpLnJlbW92ZUNsYXNzKFwiZm9ybS1uYXZpZ2F0aW9uX19idXR0b24tLWRpc2FibGVkXCIpO1xuLy8gICAgICAgICB9XG4vLyAgICAgfSk7XG4vLyAgICAgJChcIiN1c2VyUGhvbmVcIikua2V5dXAoZnVuY3Rpb24oKSB7XG4vLyAgICAgICAgIGNvbnNvbGUubG9nKFwieWVzXCIpO1xuLy8gICAgICAgICBpZiAoJCh0aGlzKS52YWwoKS5sZW5ndGggIT0gMCAmJiAkKFwiI3VzZXJOYW1lXCIpLnZhbCgpLmxlbmd0aCAhPSAwKSB7XG4vLyAgICAgICAgICAgICAkKFwiLnN1Ym1pdC1idXR0b25cIikucmVtb3ZlQ2xhc3MoXCJmb3JtLW5hdmlnYXRpb25fX2J1dHRvbi0tZGlzYWJsZWRcIik7XG4vLyAgICAgICAgIH1cbi8vICAgICB9KTtcbi8vIH0pO1xuLy8gLy8g0JHQntCb0KzQqNCQ0K8g0KHQldCa0KbQmNCvINCc0JXQndCuID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAvLyDQoNCw0LHQvtGC0LAg0YEg0LTQuNC90LDQvNC40LXRh9C10YHQutC40Lwg0LzQtdC90Y5cbi8vIGNvbnN0IHdvcmtQcm9jY2Vzc0J1dHRvbk9wZW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcbi8vICAgICBcIndvcmtQcm9jY2Vzc0J1dHRvbk9wZW5cIlxuLy8gKTtcbi8vIGNvbnN0IHdvcmtQcm9jY2Vzc0J1dHRvbkNsb3NlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXG4vLyAgICAgXCJ3b3JrUHJvY2Nlc3NCdXR0b25DbG9zZVwiXG4vLyApO1xuLy8gY29uc3QgcXVlc3Rpb25CdXR0b25PcGVuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJxdWVzdGlvbkJ1dHRvbk9wZW5cIik7XG4vLyBjb25zdCBxdWVzdGlvbkJ1dHRvbkNsb3NlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJxdWVzdGlvbkJ1dHRvbkNsb3NlXCIpO1xuLy8gY29uc3QgYmFua3NCdXR0b25PcGVuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiYW5rc0J1dHRvbk9wZW5cIik7XG4vLyBjb25zdCBiYW5rc0J1dHRvbkNsb3NlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiYW5rc0J1dHRvbkNsb3NlXCIpO1xuLy8gY29uc3QgdmVydGljYWxTbWFsbENvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxuLy8gICAgIFwidmVydGljYWxTbWFsbENvbnRhaW5lclwiXG4vLyApO1xuLy8gY29uc3QgdmVydGljYWxCaWdDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZlcnRpY2FsQmlnQ29udGFpbmVyXCIpO1xuLy8gY29uc3QgYmFzaWNNZW51Q29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiYXNpY01lbnVDb250YWluZXJcIik7XG4vLyBjb25zdCBhYm91dEJ1dHRvbkNsb3NlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhYm91dEJ1dHRvbkNsb3NlXCIpO1xuLy8gLy8g0KHQtdC60YbQuNGPINC00LvRjyDQt9Cw0L/Rg9GB0LrQsCDRgdC+0LHRi9GC0LjQuSDQv9C+INC90LDQttCw0YLQuNGOINC60L3QvtC/0L7QulxuLy8gd29ya1Byb2NjZXNzQnV0dG9uT3Blbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuLy8gICAgIGlmICghd29ya1Byb2NjZXNzQnV0dG9uT3Blbi5jbGFzc0xpc3QuY29udGFpbnMoXCJzbWFsbEhvcml6b250YWxFeHBhbmRlZFwiKSlcbi8vICAgICAgICAgd29ya1Byb2NjZXNzQnV0dG9uT3Blbi5jbGFzc0xpc3QuYWRkKFwic21hbGxIb3Jpem9udGFsRXhwYW5kZWRcIik7XG4vLyB9KTtcbi8vIHF1ZXN0aW9uQnV0dG9uT3Blbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuLy8gICAgIGlmICghcXVlc3Rpb25CdXR0b25PcGVuLmNsYXNzTGlzdC5jb250YWlucyhcInNtYWxsSG9yaXpvbnRhbEV4cGFuZGVkXCIpKSB7XG4vLyAgICAgICAgIHF1ZXN0aW9uQnV0dG9uT3Blbi5jbGFzc0xpc3QuYWRkKFwic21hbGxIb3Jpem9udGFsRXhwYW5kZWRcIik7XG4vLyAgICAgICAgIHNldFRpbWVvdXQoaW5pdFF1ZXN0aW9uU3dpcGVyLCAzMDApO1xuLy8gICAgIH1cbi8vIH0pO1xuXG4vLyBiYW5rc0J1dHRvbk9wZW4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbi8vICAgICBpZiAoIWJhbmtzQnV0dG9uT3Blbi5jbGFzc0xpc3QuY29udGFpbnMoXCJidXR0b25FeHBhbmRCaWdcIikpXG4vLyAgICAgICAgIGJhbmtzQnV0dG9uT3Blbi5jbGFzc0xpc3QuYWRkKFwiYnV0dG9uRXhwYW5kQmlnXCIpO1xuLy8gfSk7XG4vLyB2ZXJ0aWNhbFNtYWxsQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4vLyAgICAgaWYgKCF2ZXJ0aWNhbFNtYWxsQ29udGFpbmVyLmNsYXNzTGlzdC5jb250YWlucyhcImNvbnRhaW5lclNtYWxsRXhwYW5kXCIpKSB7XG4vLyAgICAgICAgIHZlcnRpY2FsU21hbGxDb250YWluZXIuY2xhc3NMaXN0LmFkZChcImNvbnRhaW5lclNtYWxsRXhwYW5kXCIpO1xuLy8gICAgICAgICBiYXNpY01lbnVDb250YWluZXIuY2xhc3NMaXN0LmFkZChcIm1lbnVUcmFuc2Zvcm1lZFwiKTtcbi8vICAgICAgICAgaW5pdEFib3V0U3dpcGVyKCk7XG4vLyAgICAgfVxuLy8gfSk7XG5cbi8vIGJhbmtzQnV0dG9uQ2xvc2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGNsb3NlQnV0dG9uKTtcblxuLy8gZnVuY3Rpb24gY2xvc2VCdXR0b24oKSB7XG4vLyAgICAgc2V0VGltZW91dChjbG9zZUJ1dHRvbkRlbGF5LCAxMDApO1xuLy8gfVxuXG4vLyBmdW5jdGlvbiBjbG9zZUJ1dHRvbkRlbGF5KCkge1xuLy8gICAgIGJhbmtzQnV0dG9uT3Blbi5jbGFzc0xpc3QudG9nZ2xlKFwiYnV0dG9uRXhwYW5kQmlnXCIpO1xuLy8gfVxuXG4vLyBhYm91dEJ1dHRvbkNsb3NlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBjbG9zZUJ1dHRvbkFib3V0KTtcblxuLy8gZnVuY3Rpb24gY2xvc2VCdXR0b25BYm91dCgpIHtcbi8vICAgICBzZXRUaW1lb3V0KGNsb3NlQnV0dG9uQWJvdXREZWxheSwgMTAwKTtcbi8vIH1cblxuLy8gZnVuY3Rpb24gY2xvc2VCdXR0b25BYm91dERlbGF5KCkge1xuLy8gICAgIHZlcnRpY2FsU21hbGxDb250YWluZXIuY2xhc3NMaXN0LnJlbW92ZShcImNvbnRhaW5lclNtYWxsRXhwYW5kXCIpO1xuLy8gICAgIGJhc2ljTWVudUNvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKFwibWVudVRyYW5zZm9ybWVkXCIpO1xuLy8gfVxuXG4vLyB3b3JrUHJvY2Nlc3NCdXR0b25DbG9zZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgY2xvc2VCdXR0b25Qcm9jZXNzKTtcblxuLy8gZnVuY3Rpb24gY2xvc2VCdXR0b25Qcm9jZXNzKCkge1xuLy8gICAgIHNldFRpbWVvdXQoY2xvc2VCdXR0b25Qcm9jZXNzRGVsYXksIDEwMCk7XG4vLyB9XG5cbi8vIGZ1bmN0aW9uIGNsb3NlQnV0dG9uUHJvY2Vzc0RlbGF5KCkge1xuLy8gICAgIHdvcmtQcm9jY2Vzc0J1dHRvbk9wZW4uY2xhc3NMaXN0LnRvZ2dsZShcInNtYWxsSG9yaXpvbnRhbEV4cGFuZGVkXCIpO1xuLy8gfVxuXG4vLyBxdWVzdGlvbkJ1dHRvbkNsb3NlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBjbG9zZUJ1dHRvblF1ZXN0aW9uKTtcblxuLy8gZnVuY3Rpb24gY2xvc2VCdXR0b25RdWVzdGlvbigpIHtcbi8vICAgICBzZXRUaW1lb3V0KGNsb3NlQnV0dG9uUXVlc3Rpb25EZWxheSwgMTAwKTtcbi8vIH1cblxuLy8gZnVuY3Rpb24gY2xvc2VCdXR0b25RdWVzdGlvbkRlbGF5KCkge1xuLy8gICAgIHF1ZXN0aW9uQnV0dG9uT3Blbi5jbGFzc0xpc3QudG9nZ2xlKFwic21hbGxIb3Jpem9udGFsRXhwYW5kZWRcIik7XG4vLyB9XG4vLyAvLyDQndCw0LTQviDQsdGD0LTQtdGCINC/0L7RgtC+0Lwg0LjQvdC40YbQuNGA0L7QstCw0YLRjCDRgdCy0LDQudC/0LXRgNGLXG4vLyAvLyDQv9C+INC30LDQv9GD0YHQutGDINC60L3QvtC/0LrQuCwg0YfRgtC+0LHRiyDQvtC90Lgg0L3QvtGA0LzQsNC70YzQvdC+INCy0LXRgNGB0YLQsNC70LjRgdGMXG4vLyBmdW5jdGlvbiBpbml0QWJvdXRTd2lwZXIoKSB7XG4vLyAgICAgbGV0IHN3aXBlckFib3V0ID0gbmV3IFN3aXBlcihcIiNhYm91dFN3aXBlclwiLCB7XG4vLyAgICAgICAgIC8vIG5hdmlnYXRpb246IHtcbi8vICAgICAgICAgLy8gICAgIG5leHRFbDogXCIuYnV0dG9uLWFib3V0LS1uZXh0XCIsXG4vLyAgICAgICAgIC8vICAgICBwcmV2RWw6IFwiLmJ1dHRvbi1hYm91dC0tcHJldlwiLFxuLy8gICAgICAgICAvLyB9LFxuLy8gICAgICAgICBwYWdpbmF0aW9uOiB7XG4vLyAgICAgICAgICAgICBlbDogXCIuYWJvdXQtcGFnaW5hdGlvblwiLFxuLy8gICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuLy8gICAgICAgICAgICAgcmVuZGVyQnVsbGV0OiBmdW5jdGlvbihpbmRleCwgY2xhc3NOYW1lKSB7XG4vLyAgICAgICAgICAgICAgICAgbGV0IHJlYWR5RWxlbWVudCA9IGBcbi8vICAgICAgICAgICAgIDxkaXYgY2xhc3MgPSBcIiR7Y2xhc3NOYW1lfSBidWxsZXQtc3BlY2lhbFwiPlxuLy8gICAgICAgICAgICAgICAgIDxkaXYgY2xhc3MgPVwiYnVsbGV0LWhlYWRlclwiPiR7bWVudUNvbXBhbnlbaW5kZXhdfTwvZGl2PlxuLy8gICAgICAgICAgICAgICAgIDxkaXYgY2xhc3MgPSBcIlwiPjwvZGl2PlxuLy8gICAgICAgICAgICAgPC9kaXY+XG4vLyAgICAgICAgICAgICBgO1xuLy8gICAgICAgICAgICAgICAgIHJldHVybiByZWFkeUVsZW1lbnQ7XG4vLyAgICAgICAgICAgICB9LFxuLy8gICAgICAgICB9LFxuLy8gICAgICAgICBsb29wOiB0cnVlLFxuLy8gICAgICAgICBlZmZlY3Q6IFwiY3ViZVwiLFxuLy8gICAgICAgICBzcGVlZDogODAwLFxuLy8gICAgIH0pO1xuLy8gfVxuXG4vLyBmdW5jdGlvbiBpbml0UXVlc3Rpb25Td2lwZXIoKSB7XG4vLyAgICAgbGV0IHN3aXBlclF1ZXN0aW9uID0gbmV3IFN3aXBlcihcIiNxdWVzdGlvblN3aXBlclwiLCB7XG4vLyAgICAgICAgIHBhZ2luYXRpb246IHtcbi8vICAgICAgICAgICAgIGVsOiBcIi5xdWVzdGlvbi1wYWdpbmF0aW9uXCIsXG4vLyAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4vLyAgICAgICAgICAgICByZW5kZXJCdWxsZXQ6IGZ1bmN0aW9uKGluZGV4KSB7XG4vLyAgICAgICAgICAgICAgICAgbGV0IHJlYWR5RWxlbWVudCA9IGBcbi8vICAgICAgICAgICAgIDxkaXYgY2xhc3MgPSBcInN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldFwiPlxuLy8gICAgICAgICAgICAgICAgIDxkaXYgY2xhc3MgPSBcInF1ZXN0aW9uLWltYWdlXCI+XG4vLyAgICAgICAgICAgICAgICAgPGltZyBzcmMgPSBcIiR7cXVlc3Rpb25JbWFnZXNbaW5kZXhdfVwiLz5cbi8vICAgICAgICAgICAgICAgICA8L2Rpdj5cbi8vICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzID0gXCJxdWVzdGlvbi1oZWFkZXJcIj4ke3F1ZXN0aW9uSGVhZGVyc1tpbmRleF19PC9kaXY+XG4vLyAgICAgICAgICAgICA8L2Rpdj5cbi8vICAgICAgICAgICAgIGA7XG4vLyAgICAgICAgICAgICAgICAgcmV0dXJuIHJlYWR5RWxlbWVudDtcbi8vICAgICAgICAgICAgIH0sXG4vLyAgICAgICAgIH0sXG4vLyAgICAgICAgIGxvb3A6IHRydWUsXG4vLyAgICAgICAgIGVmZmVjdDogXCJmYWRlXCIsXG4vLyAgICAgICAgIHNwZWVkOiA4MDAsXG4vLyAgICAgICAgIGRpcmVjdGlvbjogXCJ2ZXJ0aWNhbFwiLFxuLy8gICAgIH0pO1xuLy8gfVxuLy8gLy8g0KTRg9C90LrRhtC40Y8g0LTQu9GPINC/0L7Qu9GD0YfQtdC90LjRjyDQtNCw0L3QvdGL0YUg0L7RgiDRgdC70LDQudC00L7QsiDQtNC70Y8g0YDQtdC90LTQtdGA0LAg0LrQvdC+0L/QvtC6XG5cbi8vIGxldCBxdWVzdGlvbkhlYWRlcnMgPSBbXTtcbi8vIGxldCBxdWVzdGlvbkhlYWRlckFycmF5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5xdWVzdGlvbi1zbGlkZVwiKTtcbi8vIHF1ZXN0aW9uSGVhZGVyQXJyYXkuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuLy8gICAgIGxldCBTbGlkZUluZm9IZWFkZXIgPSBlbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtcXVlc3Rpb24taGVhZGVyXCIpO1xuLy8gICAgIHF1ZXN0aW9uSGVhZGVycy5wdXNoKFNsaWRlSW5mb0hlYWRlcik7XG4vLyB9KTtcbi8vIGxldCBxdWVzdGlvbkltYWdlcyA9IFtdO1xuLy8gbGV0IHF1ZXN0aW9uSW1hZ2VBcnJheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucXVlc3Rpb24tc2xpZGVcIik7XG4vLyBxdWVzdGlvbkltYWdlQXJyYXkuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuLy8gICAgIGxldCBTbGlkZUluZm9JbWFnZSA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1xdWVzdGlvbi1pbWFnZVwiKTtcbi8vICAgICBxdWVzdGlvbkltYWdlcy5wdXNoKFNsaWRlSW5mb0ltYWdlKTtcbi8vIH0pO1xuXG4vLyAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSDQkdCe0JvQrNCo0JDQryDQodCV0JrQptCY0K8g0JzQldCd0K5cbi8vIC8vINCc0J7QkdCY0JvQrNCd0J7QlSDQnNCV0J3QriA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gY29uc3QgbW9iaWxlSGVhZGVyQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzaG93TWVudVwiKTtcbi8vIGNvbnN0IG1vYmlsZUhlYWRlckxheWVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJoZWFkZXJMYXllclwiKTtcbi8vIG1vYmlsZUhlYWRlckJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdG9nZ2xlSGVhZGVyTWVudSk7XG4vLyBtb2JpbGVIZWFkZXJMYXllci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdG9nZ2xlSGVhZGVyTWVudSk7XG5cbi8vIGZ1bmN0aW9uIHRvZ2dsZUhlYWRlck1lbnUoKSB7XG4vLyAgICAgbW9iaWxlSGVhZGVyTGF5ZXIuY2xhc3NMaXN0LnRvZ2dsZShcImJ0bi1jbGlja2VkLS1zaG93XCIpO1xuLy8gICAgIG1vYmlsZUhlYWRlckJ0bi5jbGFzc0xpc3QudG9nZ2xlKFwiaGVhZGVyLWJ0bi0tY2xpY2tlZFwiKTtcbi8vIH1cbi8vIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09INCc0J7QkdCY0JvQrNCd0J7QlSDQnNCV0J3QrlxuXG4vLyAvKlxuLy8gVE9ETzog0JTQvtC60YPQvNC10L3RgtCw0YbQuNGPINC6INC60L7QtNGDXG4vLyBUT0RPOiDQlNC+0L/QuNGB0LDRgtGMINGE0L7RgNC80YMg0LTQu9GPINC+0L/RgNC10LTQtdC70LXQvdC90L7Qs9C+INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj1xuLy8gVE9ETzog0JjQvdC40YbQuNCw0LvQuNC30LDRhtC40Y8g0Y/QvdC00LXQutGB0LBcbi8vICovXG5cbi8vIFNtb290aExpbmtzXG5cbi8vIGNvbnN0IGFsbFNtb290aExpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5zbW9vdGgtbGlua1wiKTtcbi8vIGFsbFNtb290aExpbmtzLmZvckVhY2goKGxpbmspID0+IHtcbi8vICAgICBsaW5rLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbi8vICAgICAgICAgbGluay5zY3JvbGxJbnRvVmlldyh7XG4vLyAgICAgICAgICAgICBiZWhhdmlvcjogXCJzbW9vdGhcIixcbi8vICAgICAgICAgICAgIGJsb2NrOiBcImVuZFwiLFxuLy8gICAgICAgICAgICAgaW5saW5lOiBcIm5lYXJlc3RcIixcbi8vICAgICAgICAgfSk7XG4vLyAgICAgfSk7XG4vLyB9KTtcblxuLy8g0JrQntCUINCU0JvQryDQpNCe0KDQnNCrINChINCf0KPQndCa0KLQntCcINCd0JUg0J7Qn9Cg0JXQlNCV0JvQmNCb0JjQodCsINChINCS0KvQkdCe0KDQntCcXG5jb25zdCBhbGxVbmNlcnRhaW5TbGlkZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnVuY2VydGFpbi1mb3JtX19zbGlkZVwiKTtcbmNvbnN0IGFsbFVuY2VydGFpblNsaWRlc0hlYWRlcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFxuICAgIFwiLnNsaWRlX19oZWFkZXItLXVuY2VydGFpblwiXG4pO1xubGV0IGFsbERhdGFIZWFkZXIgPSBbXTtcbi8vINCh0J7QkdCY0KDQkNCV0Jwg0J/Qo9Cd0JrQotCrINCU0JvQryDQnNCV0J3QriDQndCQ0JLQmNCT0JDQptCY0JhcbmFsbFVuY2VydGFpblNsaWRlc0hlYWRlcnMuZm9yRWFjaCgoaGVhZGVyKSA9PiB7XG4gICAgbGV0IHNsaWRlSGVhZGVyID0gaGVhZGVyLmdldEF0dHJpYnV0ZShcImRhdGEtc2xpZGUtaGVhZGVyLXVuY2VydGFpblwiKTtcbiAgICBhbGxEYXRhSGVhZGVyLnB1c2goc2xpZGVIZWFkZXIpO1xufSk7XG5cbmNvbnN0IHVuY2VydGFpbkZvcm1OYXZpZ2F0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ1bmNlcnRhaW5OYXZpZ2F0aW9uXCIpO1xubGV0IGxpc3RJdGVtVW5jZXJ0YWluQ291bnRlciA9IDE7XG4vLyDQodCe0JfQlNCQ0JXQnCDQn9Cj0J3QmtCi0Ksg0JzQldCd0K4g0J3QkNCS0JjQk9CQ0KbQmNCYXG5hbGxEYXRhSGVhZGVyLmZvckVhY2goKGhlYWRlcikgPT4ge1xuICAgIGxldCBuZXdMaXN0SXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKTtcbiAgICBuZXdMaXN0SXRlbS5jbGFzc0xpc3QuYWRkKFwibGlzdC1uYXZpZ2F0aW9uX19idWxsZXRcIik7XG4gICAgbGV0IG5ld0xpc3RJdGVtSGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gICAgbmV3TGlzdEl0ZW1IZWFkZXIuY2xhc3NMaXN0LmFkZChcImJ1bGxldC10aXRsZVwiKTtcbiAgICBuZXdMaXN0SXRlbUhlYWRlci50ZXh0Q29udGVudCA9IGhlYWRlcjtcbiAgICBuZXdMaXN0SXRlbS5hcHBlbmQobmV3TGlzdEl0ZW1IZWFkZXIpO1xuICAgIGxldCBsZXR0ZXJlZENvdW50ZXIgPSBcIlwiO1xuICAgIHN3aXRjaCAobGlzdEl0ZW1VbmNlcnRhaW5Db3VudGVyKSB7XG4gICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgIGxldHRlcmVkQ291bnRlciA9IFwiRmlyc3RcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICBsZXR0ZXJlZENvdW50ZXIgPSBcIlNlY29uZFwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgIGxldHRlcmVkQ291bnRlciA9IFwiVGhpcmRcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICBsZXR0ZXJlZENvdW50ZXIgPSBcIkZvdXJ0aFwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNTpcbiAgICAgICAgICAgIGxldHRlcmVkQ291bnRlciA9IFwiRmlmdGhcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBuZXdMaXN0SXRlbS5pZCA9IGBVbmNlcnRhaW4ke2xldHRlcmVkQ291bnRlcn1TbGlkZUl0ZW1gO1xuICAgIGxpc3RJdGVtVW5jZXJ0YWluQ291bnRlcisrO1xuICAgIHVuY2VydGFpbkZvcm1OYXZpZ2F0aW9uLmFwcGVuZChuZXdMaXN0SXRlbSk7XG59KTtcbi8vINCk0KPQndCa0KbQmNCvINCU0JvQryDQntCf0KDQldCU0JXQm9CV0J3QmNCvINCQ0JrQotCY0JLQndCe0JPQniDQodCb0JDQmdCU0JBcbi8vINCS0JDQm9CY0JTQndCQINCi0J7Qm9Cs0JrQniBORVhUINCa0J3QntCf0J7QmlxuZnVuY3Rpb24gY2hlY2tXaGF0U2xpZGVJc1Nob3dlZEluVW5jZXJ0YWluRm9ybSgpIHtcbiAgICBhbGxVbmNlcnRhaW5TbGlkZXMuZm9yRWFjaCgoc2xpZGUpID0+IHtcbiAgICAgICAgbGV0IHNsaWRlSUQgPSBzbGlkZS5nZXRBdHRyaWJ1dGUoXCJpZFwiKTtcbiAgICAgICAgaWYgKHNsaWRlSUQuaW5jbHVkZXMoXCJGaXJzdFwiKSAmJiBzbGlkZS5jbGFzc0xpc3QuY29udGFpbnMoXCJzbGlkZS0tc2hvd1wiKSkge1xuICAgICAgICAgICAgaWYgKCFkb2N1bWVudFxuICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcIlVuY2VydGFpbkZpcnN0U2xpZGVJdGVtXCIpXG4gICAgICAgICAgICAgICAgLmNsYXNzTGlzdC5jb250YWlucyhcImxpc3QtbmF2aWdhdGlvbl9fYnVsbGV0LS1hY3RpdmVcIilcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIGRvY3VtZW50XG4gICAgICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcIlVuY2VydGFpbkZpcnN0U2xpZGVJdGVtXCIpXG4gICAgICAgICAgICAgICAgICAgIC5jbGFzc0xpc3QudG9nZ2xlKFwibGlzdC1uYXZpZ2F0aW9uX19idWxsZXQtLWFjdGl2ZVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJVbmNlcnRhaW5TZWNvbmRTbGlkZUl0ZW1cIilcbiAgICAgICAgICAgICAgICAuY2xhc3NMaXN0LmNvbnRhaW5zKFwibGlzdC1uYXZpZ2F0aW9uX19idWxsZXQtLWRpc2FibGVkXCIpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudFxuICAgICAgICAgICAgICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJVbmNlcnRhaW5TZWNvbmRTbGlkZUl0ZW1cIilcbiAgICAgICAgICAgICAgICAgICAgLmNsYXNzTGlzdC50b2dnbGUoXCJsaXN0LW5hdmlnYXRpb25fX2J1bGxldC0tZGlzYWJsZWRcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWRvY3VtZW50XG4gICAgICAgICAgICAgICAgLmdldEVsZW1lbnRCeUlkKFwiVW5jZXJ0YWluVGhpcmRTbGlkZUl0ZW1cIilcbiAgICAgICAgICAgICAgICAuY2xhc3NMaXN0LmNvbnRhaW5zKFwibGlzdC1uYXZpZ2F0aW9uX19idWxsZXQtLWRpc2FibGVkXCIpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudFxuICAgICAgICAgICAgICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJVbmNlcnRhaW5UaGlyZFNsaWRlSXRlbVwiKVxuICAgICAgICAgICAgICAgICAgICAuY2xhc3NMaXN0LnRvZ2dsZShcImxpc3QtbmF2aWdhdGlvbl9fYnVsbGV0LS1kaXNhYmxlZFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgICAgIHNsaWRlSUQuaW5jbHVkZXMoXCJTZWNvbmRcIikgJiZcbiAgICAgICAgICAgIHNsaWRlLmNsYXNzTGlzdC5jb250YWlucyhcInNsaWRlLS1zaG93XCIpXG4gICAgICAgICkge1xuICAgICAgICAgICAgaWYgKCFkb2N1bWVudFxuICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcIlVuY2VydGFpbkZpcnN0U2xpZGVJdGVtXCIpXG4gICAgICAgICAgICAgICAgLmNsYXNzTGlzdC5jb250YWlucyhcImxpc3QtbmF2aWdhdGlvbl9fYnVsbGV0LS1jb21wbGV0ZWRcIilcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIGRvY3VtZW50XG4gICAgICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcIlVuY2VydGFpbkZpcnN0U2xpZGVJdGVtXCIpXG4gICAgICAgICAgICAgICAgICAgIC5jbGFzc0xpc3QudG9nZ2xlKFwibGlzdC1uYXZpZ2F0aW9uX19idWxsZXQtLWNvbXBsZXRlZFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICBkb2N1bWVudFxuICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcIlVuY2VydGFpbkZpcnN0U2xpZGVJdGVtXCIpXG4gICAgICAgICAgICAgICAgLmNsYXNzTGlzdC5jb250YWlucyhcImxpc3QtbmF2aWdhdGlvbl9fYnVsbGV0LS1hY3RpdmVcIilcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIGRvY3VtZW50XG4gICAgICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcIlVuY2VydGFpbkZpcnN0U2xpZGVJdGVtXCIpXG4gICAgICAgICAgICAgICAgICAgIC5jbGFzc0xpc3QudG9nZ2xlKFwibGlzdC1uYXZpZ2F0aW9uX19idWxsZXQtLWFjdGl2ZVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICBkb2N1bWVudFxuICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcIlVuY2VydGFpblNlY29uZFNsaWRlSXRlbVwiKVxuICAgICAgICAgICAgICAgIC5jbGFzc0xpc3QuY29udGFpbnMoXCJsaXN0LW5hdmlnYXRpb25fX2J1bGxldC0tZGlzYWJsZWRcIilcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIGRvY3VtZW50XG4gICAgICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcIlVuY2VydGFpblNlY29uZFNsaWRlSXRlbVwiKVxuICAgICAgICAgICAgICAgICAgICAuY2xhc3NMaXN0LnRvZ2dsZShcImxpc3QtbmF2aWdhdGlvbl9fYnVsbGV0LS1kaXNhYmxlZFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJVbmNlcnRhaW5TZWNvbmRTbGlkZUl0ZW1cIilcbiAgICAgICAgICAgICAgICAuY2xhc3NMaXN0LmNvbnRhaW5zKFwibGlzdC1uYXZpZ2F0aW9uX19idWxsZXQtLWFjdGl2ZVwiKVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAgICAgLmdldEVsZW1lbnRCeUlkKFwiVW5jZXJ0YWluU2Vjb25kU2xpZGVJdGVtXCIpXG4gICAgICAgICAgICAgICAgICAgIC5jbGFzc0xpc3QudG9nZ2xlKFwibGlzdC1uYXZpZ2F0aW9uX19idWxsZXQtLWFjdGl2ZVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJ1bmNlcnRhaW5TdGF0dXNCYXJcIilcbiAgICAgICAgICAgICAgICAuY2xhc3NMaXN0LmNvbnRhaW5zKFwicHJvZ3Jlc3MtbmF2aWdhdGlvbi1iYXItLTMzcFwiKVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAgICAgLmdldEVsZW1lbnRCeUlkKFwidW5jZXJ0YWluU3RhdHVzQmFyXCIpXG4gICAgICAgICAgICAgICAgICAgIC5jbGFzc0xpc3QucmVtb3ZlKFwicHJvZ3Jlc3MtbmF2aWdhdGlvbi1iYXItLTBwXCIpO1xuICAgICAgICAgICAgICAgIGRvY3VtZW50XG4gICAgICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcInVuY2VydGFpblN0YXR1c0JhclwiKVxuICAgICAgICAgICAgICAgICAgICAuY2xhc3NMaXN0LmFkZChcInByb2dyZXNzLW5hdmlnYXRpb24tYmFyLS0zM3BcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgICAgICBzbGlkZUlELmluY2x1ZGVzKFwiVGhpcmRcIikgJiZcbiAgICAgICAgICAgIHNsaWRlLmNsYXNzTGlzdC5jb250YWlucyhcInNsaWRlLS1zaG93XCIpXG4gICAgICAgICkge1xuICAgICAgICAgICAgaWYgKCFkb2N1bWVudFxuICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcIlVuY2VydGFpblNlY29uZFNsaWRlSXRlbVwiKVxuICAgICAgICAgICAgICAgIC5jbGFzc0xpc3QuY29udGFpbnMoXCJsaXN0LW5hdmlnYXRpb25fX2J1bGxldC0tY29tcGxldGVkXCIpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudFxuICAgICAgICAgICAgICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJVbmNlcnRhaW5TZWNvbmRTbGlkZUl0ZW1cIilcbiAgICAgICAgICAgICAgICAgICAgLmNsYXNzTGlzdC50b2dnbGUoXCJsaXN0LW5hdmlnYXRpb25fX2J1bGxldC0tY29tcGxldGVkXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgIGRvY3VtZW50XG4gICAgICAgICAgICAgICAgLmdldEVsZW1lbnRCeUlkKFwiVW5jZXJ0YWluU2Vjb25kU2xpZGVJdGVtXCIpXG4gICAgICAgICAgICAgICAgLmNsYXNzTGlzdC5jb250YWlucyhcImxpc3QtbmF2aWdhdGlvbl9fYnVsbGV0LS1hY3RpdmVcIilcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIGRvY3VtZW50XG4gICAgICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcIlVuY2VydGFpblNlY29uZFNsaWRlSXRlbVwiKVxuICAgICAgICAgICAgICAgICAgICAuY2xhc3NMaXN0LnRvZ2dsZShcImxpc3QtbmF2aWdhdGlvbl9fYnVsbGV0LS1hY3RpdmVcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJVbmNlcnRhaW5UaGlyZFNsaWRlSXRlbVwiKVxuICAgICAgICAgICAgICAgIC5jbGFzc0xpc3QuY29udGFpbnMoXCJsaXN0LW5hdmlnYXRpb25fX2J1bGxldC0tZGlzYWJsZWRcIilcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIGRvY3VtZW50XG4gICAgICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcIlVuY2VydGFpblRoaXJkU2xpZGVJdGVtXCIpXG4gICAgICAgICAgICAgICAgICAgIC5jbGFzc0xpc3QudG9nZ2xlKFwibGlzdC1uYXZpZ2F0aW9uX19idWxsZXQtLWRpc2FibGVkXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFkb2N1bWVudFxuICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcIlVuY2VydGFpblRoaXJkU2xpZGVJdGVtXCIpXG4gICAgICAgICAgICAgICAgLmNsYXNzTGlzdC5jb250YWlucyhcImxpc3QtbmF2aWdhdGlvbl9fYnVsbGV0LS1hY3RpdmVcIilcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIGRvY3VtZW50XG4gICAgICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcIlVuY2VydGFpblRoaXJkU2xpZGVJdGVtXCIpXG4gICAgICAgICAgICAgICAgICAgIC5jbGFzc0xpc3QudG9nZ2xlKFwibGlzdC1uYXZpZ2F0aW9uX19idWxsZXQtLWFjdGl2ZVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICBkb2N1bWVudFxuICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcInVuY2VydGFpblN0YXR1c0JhclwiKVxuICAgICAgICAgICAgICAgIC5jbGFzc0xpc3QuY29udGFpbnMoXCJwcm9ncmVzcy1uYXZpZ2F0aW9uLWJhci0tMzNwXCIpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudFxuICAgICAgICAgICAgICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJ1bmNlcnRhaW5TdGF0dXNCYXJcIilcbiAgICAgICAgICAgICAgICAgICAgLmNsYXNzTGlzdC5yZW1vdmUoXCJwcm9ncmVzcy1uYXZpZ2F0aW9uLWJhci0tMzNwXCIpO1xuXG4gICAgICAgICAgICAgICAgZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAgICAgLmdldEVsZW1lbnRCeUlkKFwidW5jZXJ0YWluU3RhdHVzQmFyXCIpXG4gICAgICAgICAgICAgICAgICAgIC5jbGFzc0xpc3QuYWRkKFwicHJvZ3Jlc3MtbmF2aWdhdGlvbi1iYXItLTk1cFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xufVxuLy8g0J/QoNCYINCd0JDQltCQ0KLQmNCYINCd0JAg0KHQm9CV0JTQo9Cu0KnQo9CuINCa0J3QntCf0JrQoyDQrdCi0J7QmSDQpNCe0KDQnNCrINCc0JXQndCv0JXQotCh0K8g0KHQm9CQ0JnQlCDQmCDQn9Cj0J3QmtCiINCd0JDQktCY0JPQkNCm0JjQmFxuY29uc3QgYWxsTmV4dFVuY2VydGFpbkJ0bnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmJ0bi11bmNlcnRhaW4tLW5leHRcIik7XG5hbGxOZXh0VW5jZXJ0YWluQnRucy5mb3JFYWNoKChidXR0b24pID0+IHtcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgbGV0IG5leHRTbGlkZUlEID0gYnV0dG9uLmdldEF0dHJpYnV0ZShcImlkXCIpO1xuICAgICAgICBuZXh0U2xpZGVJRCA9IG5leHRTbGlkZUlELnJlcGxhY2UoXCJOZXh0XCIsIFwiXCIpO1xuICAgICAgICBsZXQgc2xpZGVJRCA9IFwiXCI7XG4gICAgICAgIHN3aXRjaCAobmV4dFNsaWRlSUQpIHtcbiAgICAgICAgICAgIGNhc2UgXCJTZWNvbmRTbGlkZVwiOlxuICAgICAgICAgICAgICAgIHNsaWRlSUQgPSBcIkZpcnN0U2xpZGVcIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJUaGlyZFNsaWRlXCI6XG4gICAgICAgICAgICAgICAgc2xpZGVJRCA9IFwiU2Vjb25kU2xpZGVcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBzbGlkZUFjdGl2ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHNsaWRlSUQpO1xuICAgICAgICBsZXQgc2xpZGVOZXh0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobmV4dFNsaWRlSUQpO1xuICAgICAgICBzbGlkZUFjdGl2ZS5jbGFzc0xpc3QudG9nZ2xlKFwic2xpZGUtLXNob3dcIik7XG4gICAgICAgIHNsaWRlQWN0aXZlLmNsYXNzTGlzdC50b2dnbGUoXCJzbGlkZS0taGlkZGVuXCIpO1xuICAgICAgICBzbGlkZU5leHQuY2xhc3NMaXN0LnRvZ2dsZShcInNsaWRlLS1zaG93XCIpO1xuICAgICAgICBzbGlkZU5leHQuY2xhc3NMaXN0LnRvZ2dsZShcInNsaWRlLS1oaWRkZW5cIik7XG4gICAgICAgIGNoZWNrV2hhdFNsaWRlSXNTaG93ZWRJblVuY2VydGFpbkZvcm0oKTtcbiAgICB9KTtcbn0pO1xuXG5jb25zdCBhbGxQcmV2aW91c1VuY2VydGFpbkJ0bnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFxuICAgIFwiLmJ0bi11bmNlcnRhaW4tLXByZXZpb3VzXCJcbik7XG5cbmFsbFByZXZpb3VzVW5jZXJ0YWluQnRucy5mb3JFYWNoKChidXR0b24pID0+IHtcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgbGV0IG5leHRTbGlkZUlEID0gYnV0dG9uLmdldEF0dHJpYnV0ZShcImlkXCIpO1xuICAgICAgICBuZXh0U2xpZGVJRCA9IG5leHRTbGlkZUlELnJlcGxhY2UoXCJQcmV2aW91c1wiLCBcIlwiKTtcbiAgICAgICAgbGV0IHNsaWRlSUQgPSBcIlwiO1xuICAgICAgICBzd2l0Y2ggKG5leHRTbGlkZUlEKSB7XG4gICAgICAgICAgICBjYXNlIFwiRmlyc3RTbGlkZVwiOlxuICAgICAgICAgICAgICAgIHNsaWRlSUQgPSBcIlNlY29uZFNsaWRlXCI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiU2Vjb25kU2xpZGVcIjpcbiAgICAgICAgICAgICAgICBzbGlkZUlEID0gXCJUaGlyZFNsaWRlXCI7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgc2xpZGVBY3RpdmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChzbGlkZUlEKTtcbiAgICAgICAgbGV0IHNsaWRlTmV4dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG5leHRTbGlkZUlEKTtcbiAgICAgICAgc2xpZGVBY3RpdmUuY2xhc3NMaXN0LnRvZ2dsZShcInNsaWRlLS1zaG93XCIpO1xuICAgICAgICBzbGlkZUFjdGl2ZS5jbGFzc0xpc3QudG9nZ2xlKFwic2xpZGUtLWhpZGRlblwiKTtcbiAgICAgICAgc2xpZGVOZXh0LmNsYXNzTGlzdC50b2dnbGUoXCJzbGlkZS0tc2hvd1wiKTtcbiAgICAgICAgc2xpZGVOZXh0LmNsYXNzTGlzdC50b2dnbGUoXCJzbGlkZS0taGlkZGVuXCIpO1xuICAgICAgICAvLyBjaGVja1doYXRTbGlkZUlzU2hvd2VkSW5VbmNlcnRhaW5Gb3JtKCk7XG4gICAgfSk7XG59KTtcblxuY2hlY2tXaGF0U2xpZGVJc1Nob3dlZEluVW5jZXJ0YWluRm9ybSgpO1xuXG5jb25zdCB1c2VyTmFtZUlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ1c2VyTmFtZVwiKTtcbmNvbnN0IHVzZXJQaG9uZUlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ1c2VyUGhvbmVcIik7XG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcbiAgICAkKFwiLnN1Ym1pdC1idXR0b25cIikuYWRkQ2xhc3MoXCJzdWJtaXQtYnV0dG9uLS1kaXNhYmxlZFwiKTtcbiAgICAkKFwiI3VzZXJOYW1lXCIpLmtleXVwKGZ1bmN0aW9uKCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcInllc1wiKTtcbiAgICAgICAgaWYgKCQodGhpcykudmFsKCkubGVuZ3RoICE9IDAgJiYgJChcIiN1c2VyUGhvbmVcIikudmFsKCkubGVuZ3RoICE9IDApIHtcbiAgICAgICAgICAgICQoXCIuc3VibWl0LWJ1dHRvblwiKS5yZW1vdmVDbGFzcyhcInN1Ym1pdC1idXR0b24tLWRpc2FibGVkXCIpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgJChcIiN1c2VyUGhvbmVcIikua2V5dXAoZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwieWVzXCIpO1xuICAgICAgICBpZiAoJCh0aGlzKS52YWwoKS5sZW5ndGggIT0gMCAmJiAkKFwiI3VzZXJOYW1lXCIpLnZhbCgpLmxlbmd0aCAhPSAwKSB7XG4gICAgICAgICAgICAkKFwiLnN1Ym1pdC1idXR0b25cIikucmVtb3ZlQ2xhc3MoXCJzdWJtaXQtYnV0dG9uLS1kaXNhYmxlZFwiKTtcbiAgICAgICAgfVxuICAgIH0pO1xufSk7XG5cbiQoXCIjdXNlclBob25lXCIpLmlucHV0bWFzaygpOyIsIi8vIC8vINCl0YDQsNC90LjQu9C40YnQsCDQtNCw0YLQsC3QtNCw0L3QvdGL0YUsXG4vLyAvL9C00LvRjyDRg9C00L7QsdC90L7Qs9C+INC30LDQv9C+0LvQvdC10L3QuNGPINC00LDQvdC90YvRhSDQsiDRgdCy0LDQudC/0LXRgNCw0YVcbi8vIGxldCBtZW51ID0gW107XG4vLyBsZXQgSGVhZGVyc0FycmF5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5hdHRlbnRpb24tY29udGFpbmVyX19oZWFkZXJcIik7XG4vLyBIZWFkZXJzQXJyYXkuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuLy8gICAgIGxldCBIZWFkZXJWYWx1ZSA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1pbmZvXCIpO1xuLy8gICAgIG1lbnUucHVzaChIZWFkZXJWYWx1ZSk7XG4vLyB9KTtcbi8vIGxldCBtZW51Q29tcGFueSA9IFtdO1xuLy8gbGV0IGNvbXBhbnlQYWdlc0FycmF5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5hYm91dC1pbmZvXCIpO1xuLy8gY29tcGFueVBhZ2VzQXJyYXkuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuLy8gICAgIGxldCBIZWFkZXJWYWx1ZSA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1pbmZvXCIpO1xuLy8gICAgIG1lbnVDb21wYW55LnB1c2goSGVhZGVyVmFsdWUpO1xuLy8gfSk7XG4vLyAvLyDQodCy0LDQudC/0LXRgNGLLCDQutC+0YLQvtGA0YvQtSDQt9Cw0L/Rg9GB0LrQsNGO0YLRgdGPINGB0YDQsNC30YNcbi8vIGxldCBzd2lwZXJHcmVldCA9IG5ldyBTd2lwZXIoXCIjZ3JlZXRpbmdTd2lwcGVyXCIsIHtcbi8vICAgICAvLyBuYXZpZ2F0aW9uOiB7XG4vLyAgICAgLy8gICAgIG5leHRFbDogXCIuZ3JlZXRpbmctbmV4dFwiLFxuLy8gICAgIC8vICAgICBwcmV2RWw6IFwiLmdyZWV0aW5nLXByZXZcIixcbi8vICAgICAvLyB9LFxuLy8gICAgIHBhZ2luYXRpb246IHtcbi8vICAgICAgICAgZWw6IFwiLnN3aXBlci1wYWdpbmF0aW9uXCIsXG4vLyAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbi8vICAgICAgICAgcmVuZGVyQnVsbGV0OiBmdW5jdGlvbihpbmRleCwgY2xhc3NOYW1lKSB7XG4vLyAgICAgICAgICAgICBsZXQgcmVhZHlFbGVtZW50ID0gYFxuLy8gICAgICAgICAgICAgPGRpdiBjbGFzcyA9IFwiJHtjbGFzc05hbWV9IGJ1bGxldC1zcGVjaWFsXCI+XG4vLyAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcyA9XCJidWxsZXQtaGVhZGVyXCI+JHttZW51W2luZGV4XX08L2Rpdj5cbi8vICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzID0gXCJcIj48L2Rpdj5cbi8vICAgICAgICAgICAgIDwvZGl2PlxuLy8gICAgICAgICAgICAgYDtcbi8vICAgICAgICAgICAgIHJldHVybiByZWFkeUVsZW1lbnQ7XG4vLyAgICAgICAgIH0sXG4vLyAgICAgfSxcbi8vICAgICBsb29wOiB0cnVlLFxuLy8gICAgIGVmZmVjdDogXCJmYWRlXCIsXG4vLyAgICAgc3BlZWQ6IDgwMCxcbi8vICAgICB3YXRjaFNsaWRlc1Byb2dyZXNzOiB0cnVlLFxuLy8gICAgIHdhdGNoVmlzaWJpbGl0eTogdHJ1ZSxcbi8vICAgICBkaXNhYmxlT25JbnRlcmFjdGlvbjogdHJ1ZSxcbi8vIH0pO1xuLy8gbGV0IHN3aXBlckJhbmtzID0gbmV3IFN3aXBlcihcIiNiYW5rc1N3aXBlclwiLCB7XG4vLyAgICAgbmF2aWdhdGlvbjoge1xuLy8gICAgICAgICBuZXh0RWw6IFwiLmJ1dHRvbi1iYW5rLS1uZXh0XCIsXG4vLyAgICAgICAgIHByZXZFbDogXCIuYnV0dG9uLWJhbmstLXByZXZcIixcbi8vICAgICB9LFxuLy8gICAgIHBhZ2luYXRpb246IHtcbi8vICAgICAgICAgZWw6IFwiLmJhbmtzLXBhZ2luYXRpb25cIixcbi8vICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuLy8gICAgIH0sXG4vLyAgICAgbG9vcDogdHJ1ZSxcbi8vICAgICBlZmZlY3Q6IFwiY2FyZHNcIixcbi8vICAgICBzcGVlZDogODAwLFxuLy8gICAgIHNsaWRlc1BlclZpZXc6IDYsXG4vLyAgICAgYnJlYWtwb2ludHM6IHtcbi8vICAgICAgICAgOTIwOiB7XG4vLyAgICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiA0LFxuLy8gICAgICAgICB9LFxuLy8gICAgICAgICA2MDA6IHtcbi8vICAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDMsXG4vLyAgICAgICAgIH0sXG4vLyAgICAgICAgIDQ1MDoge1xuLy8gICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogMixcbi8vICAgICAgICAgfSxcbi8vICAgICB9LFxuLy8gfSk7XG5cbi8vIC8vINCQ0LLRgtC+0L/QtdGH0LDRgtCw0L3QuNC1INGC0LXQutGB0YLQsCDQsiDQs9C70LDQstC90L7QvCDRgdCy0LDQudC/0LXRgNC1XG4vLyB2YXIgVHh0VHlwZSA9IGZ1bmN0aW9uKGVsLCB0b1JvdGF0ZSwgcGVyaW9kKSB7XG4vLyAgICAgdGhpcy50b1JvdGF0ZSA9IHRvUm90YXRlO1xuLy8gICAgIHRoaXMuZWwgPSBlbDtcbi8vICAgICB0aGlzLmxvb3BOdW0gPSAwO1xuLy8gICAgIHRoaXMucGVyaW9kID0gcGFyc2VJbnQocGVyaW9kLCAxMCkgfHwgMjAwMDtcbi8vICAgICB0aGlzLnR4dCA9IFwiXCI7XG4vLyAgICAgdGhpcy50aWNrKCk7XG4vLyAgICAgdGhpcy5pc0RlbGV0aW5nID0gZmFsc2U7XG4vLyB9O1xuXG4vLyBUeHRUeXBlLnByb3RvdHlwZS50aWNrID0gZnVuY3Rpb24oKSB7XG4vLyAgICAgdmFyIGkgPSB0aGlzLmxvb3BOdW0gJSB0aGlzLnRvUm90YXRlLmxlbmd0aDtcbi8vICAgICB2YXIgZnVsbFR4dCA9IHRoaXMudG9Sb3RhdGVbaV07XG5cbi8vICAgICBpZiAodGhpcy5pc0RlbGV0aW5nKSB7XG4vLyAgICAgICAgIHRoaXMudHh0ID0gZnVsbFR4dC5zdWJzdHJpbmcoMCwgdGhpcy50eHQubGVuZ3RoIC0gMSk7XG4vLyAgICAgfSBlbHNlIHtcbi8vICAgICAgICAgdGhpcy50eHQgPSBmdWxsVHh0LnN1YnN0cmluZygwLCB0aGlzLnR4dC5sZW5ndGggKyAxKTtcbi8vICAgICB9XG5cbi8vICAgICB0aGlzLmVsLmlubmVySFRNTCA9ICc8c3BhbiBjbGFzcz1cIndyYXBcIj4nICsgdGhpcy50eHQgKyBcIjwvc3Bhbj5cIjtcblxuLy8gICAgIHZhciB0aGF0ID0gdGhpcztcbi8vICAgICB2YXIgZGVsdGEgPSAyMDAgLSBNYXRoLnJhbmRvbSgpICogMTAwO1xuXG4vLyAgICAgaWYgKHRoaXMuaXNEZWxldGluZykge1xuLy8gICAgICAgICBkZWx0YSAvPSAyO1xuLy8gICAgIH1cblxuLy8gICAgIGlmICghdGhpcy5pc0RlbGV0aW5nICYmIHRoaXMudHh0ID09PSBmdWxsVHh0KSB7XG4vLyAgICAgICAgIGRlbHRhID0gdGhpcy5wZXJpb2Q7XG4vLyAgICAgICAgIHRoaXMuaXNEZWxldGluZyA9IHRydWU7XG4vLyAgICAgfSBlbHNlIGlmICh0aGlzLmlzRGVsZXRpbmcgJiYgdGhpcy50eHQgPT09IFwiXCIpIHtcbi8vICAgICAgICAgdGhpcy5pc0RlbGV0aW5nID0gZmFsc2U7XG4vLyAgICAgICAgIHRoaXMubG9vcE51bSsrO1xuLy8gICAgICAgICBkZWx0YSA9IDUwMDtcbi8vICAgICB9XG5cbi8vICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuLy8gICAgICAgICB0aGF0LnRpY2soKTtcbi8vICAgICB9LCBkZWx0YSk7XG4vLyB9O1xuXG4vLyB3aW5kb3cub25sb2FkID0gZnVuY3Rpb24oKSB7XG4vLyAgICAgdmFyIGVsZW1lbnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInR5cGV3cml0ZVwiKTtcbi8vICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGVsZW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4vLyAgICAgICAgIHZhciB0b1JvdGF0ZSA9IGVsZW1lbnRzW2ldLmdldEF0dHJpYnV0ZShcImRhdGEtdHlwZVwiKTtcbi8vICAgICAgICAgdmFyIHBlcmlvZCA9IGVsZW1lbnRzW2ldLmdldEF0dHJpYnV0ZShcImRhdGEtcGVyaW9kXCIpO1xuLy8gICAgICAgICBpZiAodG9Sb3RhdGUpIHtcbi8vICAgICAgICAgICAgIG5ldyBUeHRUeXBlKGVsZW1lbnRzW2ldLCBKU09OLnBhcnNlKHRvUm90YXRlKSwgcGVyaW9kKTtcbi8vICAgICAgICAgfVxuLy8gICAgIH1cbi8vICAgICAvLyBJTkpFQ1QgQ1NTXG4vLyAgICAgdmFyIGNzcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbi8vICAgICBjc3MudHlwZSA9IFwidGV4dC9jc3NcIjtcbi8vICAgICBjc3MuaW5uZXJIVE1MID0gXCIudHlwZXdyaXRlID4gLndyYXAgeyBib3JkZXItcmlnaHQ6IDAuMDhlbSBzb2xpZCAjZmZmfVwiO1xuLy8gICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY3NzKTtcbi8vIH07XG4vLyAvLyDQmNC90LjRhtC40LDRhtC40Y8g0JDQntCh0JAg0LTQu9GPINC00LLQuNCz0LDRjtGJ0LXQs9C+INGC0LXQutGB0YLQsFxuLy8gQU9TLmluaXQoe1xuLy8gICAgIHN0YXJ0RXZlbnQ6IFwiRE9NQ29udGVudExvYWRlZFwiLFxuLy8gfSk7XG5cbi8vINCg0LDQsdC+0YLQsNC10Lwg0YHQviDRgdC70LDQudC00LXRgNCw0LzQuCDQsiDRhNC+0YDQvNC1XG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcbiAgICAkKFwiI3NsaWRlckRlYnRcIikuc2xpZGVyKHtcbiAgICAgICAgcmFuZ2U6IFwibWluXCIsXG4gICAgICAgIGFuaW1hdGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiA1MDAwMDAsXG4gICAgICAgIG1pbjogMTAwMDAwLFxuICAgICAgICBtYXg6IDQzNTAwMDAsXG4gICAgICAgIHN0ZXA6IDEwMDAsXG4gICAgICAgIHNsaWRlOiBmdW5jdGlvbihldmVudCwgdWkpIHtcbiAgICAgICAgICAgIGxldCBkZWJ0VmFsdWUgPSB1aS52YWx1ZTtcbiAgICAgICAgICAgIGRlYnRWYWx1ZSA9IG51bWJlcldpdGhDb21tYXMoZGVidFZhbHVlKTtcbiAgICAgICAgICAgICQoXCIjZGVidElucHV0XCIpLnZhbChkZWJ0VmFsdWUpO1xuICAgICAgICB9LFxuICAgIH0pO1xuICAgICQoXCIjZGVidElucHV0XCIpLnZhbCgkKFwiI3NsaWRlckRlYnRcIikuc2xpZGVyKFwib3B0aW9uXCIsIFwidmFsdWVcIikpO1xuICAgICQoXCIjZGVidElucHV0XCIpLmNoYW5nZShmdW5jdGlvbigpIHtcbiAgICAgICAgJChcIiNzbGlkZXJEZWJ0XCIpLnNsaWRlcihcInZhbHVlXCIsICQodGhpcykudmFsKCkpO1xuICAgIH0pO1xuICAgICQoXCIjc2xpZGVyVGltZVwiKS5zbGlkZXIoe1xuICAgICAgICByYW5nZTogXCJtaW5cIixcbiAgICAgICAgYW5pbWF0ZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IDMsXG4gICAgICAgIG1pbjogMSxcbiAgICAgICAgbWF4OiA4LFxuICAgICAgICBzdGVwOiAxLFxuICAgICAgICBzbGlkZTogZnVuY3Rpb24oZXZlbnQsIHVpKSB7XG4gICAgICAgICAgICBsZXQgdGltZVZhbHVlID0gdWkudmFsdWU7XG4gICAgICAgICAgICBzd2l0Y2ggKHRpbWVWYWx1ZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgdGltZVZhbHVlID0gYCR7dGltZVZhbHVlfSDQs9C+0LRgO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgICAgIHRpbWVWYWx1ZSA9IGAke3RpbWVWYWx1ZX0g0LPQvtC00LBgO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgIHRpbWVWYWx1ZSA9IGAke3RpbWVWYWx1ZX0g0LPQvtC00LBgO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICAgICAgICAgIHRpbWVWYWx1ZSA9IGAke3RpbWVWYWx1ZX0g0LPQvtC00LBgO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICB0aW1lVmFsdWUgPSBgJHt0aW1lVmFsdWV9INC70LXRgmA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAkKFwiI3RpbWVJbnB1dFwiKS52YWwodGltZVZhbHVlKTtcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICAkKFwiI3RpbWVJbnB1dFwiKS52YWwoJChcIiNzbGlkZXJUaW1lXCIpLnNsaWRlcihcIm9wdGlvblwiLCBcInZhbHVlXCIpKTtcbiAgICBsZXQgdGltZVZhbHVlID0gJChcIiN0aW1lSW5wdXRcIikudmFsKCk7XG4gICAgc3dpdGNoICh0aW1lVmFsdWUpIHtcbiAgICAgICAgZGVmYXVsdDogdGltZVZhbHVlID0gYCR7dGltZVZhbHVlfSDQs9C+0LTQsGA7XG4gICAgfVxuICAgICQoXCIjdGltZUlucHV0XCIpLnZhbCh0aW1lVmFsdWUpO1xuICAgICQoXCIjdGltZUlucHV0XCIpLmNoYW5nZShmdW5jdGlvbigpIHtcbiAgICAgICAgJChcIiNzbGlkZXJUaW1lXCIpLnNsaWRlcihcInZhbHVlXCIsICQodGhpcykudmFsKCkpO1xuICAgIH0pO1xuICAgICQoXCIjc2xpZGVySW5jb21lXCIpLnNsaWRlcih7XG4gICAgICAgIHJhbmdlOiBcIm1pblwiLFxuICAgICAgICBhbmltYXRlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogMzAwMDAsXG4gICAgICAgIG1pbjogMTAwMDAsXG4gICAgICAgIG1heDogNTAwMDAwLFxuICAgICAgICBzdGVwOiA1MDAwLFxuICAgICAgICBzbGlkZTogZnVuY3Rpb24oZXZlbnQsIHVpKSB7XG4gICAgICAgICAgICBsZXQgZGVidFZhbHVlID0gdWkudmFsdWU7XG4gICAgICAgICAgICBkZWJ0VmFsdWUgPSBudW1iZXJXaXRoQ29tbWFzKGRlYnRWYWx1ZSk7XG4gICAgICAgICAgICAkKFwiI2luY29tZUlucHV0XCIpLnZhbChkZWJ0VmFsdWUpO1xuICAgICAgICB9LFxuICAgIH0pO1xuICAgICQoXCIjaW5jb21lSW5wdXRcIikudmFsKCQoXCIjc2xpZGVySW5jb21lXCIpLnNsaWRlcihcIm9wdGlvblwiLCBcInZhbHVlXCIpKTtcbiAgICAkKFwiI2luY29tZUlucHV0XCIpLmNoYW5nZShmdW5jdGlvbigpIHtcbiAgICAgICAgJChcIiNzbGlkZXJJbmNvbWVcIikuc2xpZGVyKFwidmFsdWVcIiwgJCh0aGlzKS52YWwoKSk7XG4gICAgfSk7XG4gICAgJChcIiNzbGlkZXJJbnZlc3RcIikuc2xpZGVyKHtcbiAgICAgICAgcmFuZ2U6IFwibWluXCIsXG4gICAgICAgIGFuaW1hdGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiAxMDAwMDAsXG4gICAgICAgIG1pbjogMCxcbiAgICAgICAgbWF4OiA0MDAwMDAsXG4gICAgICAgIHN0ZXA6IDEwMDAsXG4gICAgICAgIHNsaWRlOiBmdW5jdGlvbihldmVudCwgdWkpIHtcbiAgICAgICAgICAgIGxldCBkZWJ0VmFsdWUgPSB1aS52YWx1ZTtcbiAgICAgICAgICAgIGRlYnRWYWx1ZSA9IG51bWJlcldpdGhDb21tYXMoZGVidFZhbHVlKTtcbiAgICAgICAgICAgICQoXCIjaW52ZXN0SW5wdXRcIikudmFsKGRlYnRWYWx1ZSk7XG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgJChcIiNpbnZlc3RJbnB1dFwiKS52YWwoJChcIiNzbGlkZXJJbnZlc3RcIikuc2xpZGVyKFwib3B0aW9uXCIsIFwidmFsdWVcIikpO1xuICAgICQoXCIjaW52ZXN0SW5wdXRcIikuY2hhbmdlKGZ1bmN0aW9uKCkge1xuICAgICAgICAkKFwiI3NsaWRlckludmVzdFwiKS5zbGlkZXIoXCJ2YWx1ZVwiLCAkKHRoaXMpLnZhbCgpKTtcbiAgICB9KTtcbn0pOyJdfQ==
