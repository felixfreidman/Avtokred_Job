"use strict";function numberWithCommas(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")}var allNextButtons=document.querySelectorAll(".form-navigation__button--next");allNextButtons.forEach(function(n){n.addEventListener("click",function(){var e=(e=n.id).replace("Button",""),t=n.parentNode.parentNode.id;document.getElementById(t).classList.toggle("screen--hide"),document.getElementById(t).classList.toggle("screen--show"),document.getElementById(e).classList.toggle("screen--hide"),document.getElementById(e).classList.toggle("screen--show"),document.querySelectorAll("input[name='autoSelect']").forEach(function(e){e.checked&&(e=e.id,detailedFormObject.type=e.toString())});e=document.getElementById("debtInput").value;console.log(e),detailedFormObject.credit=e.toString();e=document.getElementById("timeInput").value;detailedFormObject.time=e.toString();e=document.getElementById("investInput").value;detailedFormObject.invest=e.toString(),console.log(detailedFormObject)})});var allPrevButtons=document.querySelectorAll(".form-navigation__button--prev");allPrevButtons.forEach(function(n){n.addEventListener("click",function(){var e=(e=n.id).replace("Button",""),t=n.parentNode.parentNode.id;document.getElementById(t).classList.toggle("screen--hide"),document.getElementById(t).classList.toggle("screen--show"),document.getElementById(e).classList.toggle("screen--hide"),document.getElementById(e).classList.toggle("screen--show")})});var detailedFormObject={type:"",credit:"",time:"",invest:"",userName:"",userPhone:""},detailedButton=document.getElementById("detailedForm");detailedButton.addEventListener("click",function(){document.getElementById("firstScreen").classList.toggle("screen--hide"),document.getElementById("firstScreen").classList.toggle("screen--show"),document.getElementById("secondScreen").classList.toggle("screen--hide"),document.getElementById("secondScreen").classList.toggle("screen--show")});var userNameInput=document.getElementById("userName"),userPhoneInput=document.getElementById("userPhone");$(document).ready(function(){$(".submit-button").addClass("form-navigation__button--disabled"),$("#userName").keyup(function(){console.log("yes"),0!=$(this).val().length&&0!=$("#userPhone").val().length&&$(".submit-button").removeClass("form-navigation__button--disabled")}),$("#userPhone").keyup(function(){console.log("yes"),0!=$(this).val().length&&0!=$("#userName").val().length&&$(".submit-button").removeClass("form-navigation__button--disabled")})});var workProccessButtonOpen=document.getElementById("workProccessButtonOpen"),workProccessButtonClose=document.getElementById("workProccessButtonClose"),questionButtonOpen=document.getElementById("questionButtonOpen"),questionButtonClose=document.getElementById("questionButtonClose"),banksButtonOpen=document.getElementById("banksButtonOpen"),banksButtonClose=document.getElementById("banksButtonClose"),verticalSmallContainer=document.getElementById("verticalSmallContainer"),verticalBigContainer=document.getElementById("verticalBigContainer"),basicMenuContainer=document.getElementById("basicMenuContainer"),aboutButtonClose=document.getElementById("aboutButtonClose");function closeButton(){setTimeout(closeButtonDelay,100)}function closeButtonDelay(){banksButtonOpen.classList.toggle("buttonExpandBig")}function closeButtonAbout(){setTimeout(closeButtonAboutDelay,100)}function closeButtonAboutDelay(){verticalSmallContainer.classList.remove("containerSmallExpand"),basicMenuContainer.classList.remove("menuTransformed")}function closeButtonProcess(){setTimeout(closeButtonProcessDelay,100)}function closeButtonProcessDelay(){workProccessButtonOpen.classList.toggle("smallHorizontalExpanded")}function closeButtonQuestion(){setTimeout(closeButtonQuestionDelay,100)}function closeButtonQuestionDelay(){questionButtonOpen.classList.toggle("smallHorizontalExpanded")}function initAboutSwiper(){new Swiper("#aboutSwiper",{pagination:{el:".about-pagination",clickable:!0,renderBullet:function(e,t){return'\n            <div class = "'.concat(t,' bullet-special">\n                <div class ="bullet-header">').concat(menuCompany[e],'</div>\n                <div class = ""></div>\n            </div>\n            ')}},loop:!0,effect:"cube",speed:800})}function initQuestionSwiper(){new Swiper("#questionSwiper",{pagination:{el:".question-pagination",clickable:!0,renderBullet:function(e){return'\n            <div class = "swiper-pagination-bullet">\n                <div class = "question-image">\n                <img src = "'.concat(questionImages[e],'"/>\n                </div>\n                <div class = "question-header">').concat(questionHeaders[e],"</div>\n            </div>\n            ")}},loop:!0,effect:"fade",speed:800,direction:"vertical"})}workProccessButtonOpen.addEventListener("click",function(){workProccessButtonOpen.classList.contains("smallHorizontalExpanded")||workProccessButtonOpen.classList.add("smallHorizontalExpanded")}),questionButtonOpen.addEventListener("click",function(){questionButtonOpen.classList.contains("smallHorizontalExpanded")||(questionButtonOpen.classList.add("smallHorizontalExpanded"),setTimeout(initQuestionSwiper,300))}),banksButtonOpen.addEventListener("click",function(){banksButtonOpen.classList.contains("buttonExpandBig")||banksButtonOpen.classList.add("buttonExpandBig")}),verticalSmallContainer.addEventListener("click",function(){verticalSmallContainer.classList.contains("containerSmallExpand")||(verticalSmallContainer.classList.add("containerSmallExpand"),basicMenuContainer.classList.add("menuTransformed"),initAboutSwiper())}),banksButtonClose.addEventListener("click",closeButton),aboutButtonClose.addEventListener("click",closeButtonAbout),workProccessButtonClose.addEventListener("click",closeButtonProcess),questionButtonClose.addEventListener("click",closeButtonQuestion);var questionHeaders=[],questionHeaderArray=document.querySelectorAll(".question-slide");questionHeaderArray.forEach(function(e){e=e.getAttribute("data-question-header");questionHeaders.push(e)});var questionImages=[],questionImageArray=document.querySelectorAll(".question-slide");questionImageArray.forEach(function(e){e=e.getAttribute("data-question-image");questionImages.push(e)});var mobileHeaderBtn=document.getElementById("showMenu"),mobileHeaderLayer=document.getElementById("headerLayer");function toggleHeaderMenu(){mobileHeaderLayer.classList.toggle("btn-clicked--show"),mobileHeaderBtn.classList.toggle("header-btn--clicked")}mobileHeaderBtn.addEventListener("click",toggleHeaderMenu),mobileHeaderLayer.addEventListener("click",toggleHeaderMenu);var menu=[],HeadersArray=document.querySelectorAll(".attention-container__header");HeadersArray.forEach(function(e){e=e.getAttribute("data-info");menu.push(e)});var menuCompany=[],companyPagesArray=document.querySelectorAll(".about-info");companyPagesArray.forEach(function(e){e=e.getAttribute("data-info");menuCompany.push(e)});var swiperGreet=new Swiper("#greetingSwipper",{pagination:{el:".swiper-pagination",clickable:!0,renderBullet:function(e,t){return'\n            <div class = "'.concat(t,' bullet-special">\n                <div class ="bullet-header">').concat(menu[e],'</div>\n                <div class = ""></div>\n            </div>\n            ')}},loop:!0,effect:"fade",speed:800,watchSlidesProgress:!0,watchVisibility:!0,disableOnInteraction:!0}),swiperBanks=new Swiper("#banksSwiper",{navigation:{nextEl:".button-bank--next",prevEl:".button-bank--prev"},pagination:{el:".banks-pagination",clickable:!0},loop:!0,effect:"cards",speed:800,slidesPerView:6,breakpoints:{920:{slidesPerView:4},600:{slidesPerView:3},450:{slidesPerView:2}}}),TxtType=function(e,t,n){this.toRotate=t,this.el=e,this.loopNum=0,this.period=parseInt(n,10)||2e3,this.txt="",this.tick(),this.isDeleting=!1};TxtType.prototype.tick=function(){var e=this.loopNum%this.toRotate.length,t=this.toRotate[e];this.isDeleting?this.txt=t.substring(0,this.txt.length-1):this.txt=t.substring(0,this.txt.length+1),this.el.innerHTML='<span class="wrap">'+this.txt+"</span>";var n=this,e=200-100*Math.random();this.isDeleting&&(e/=2),this.isDeleting||this.txt!==t?this.isDeleting&&""===this.txt&&(this.isDeleting=!1,this.loopNum++,e=500):(e=this.period,this.isDeleting=!0),setTimeout(function(){n.tick()},e)},window.onload=function(){for(var e=document.getElementsByClassName("typewrite"),t=0;t<e.length;t++){var n=e[t].getAttribute("data-type"),i=e[t].getAttribute("data-period");n&&new TxtType(e[t],JSON.parse(n),i)}var o=document.createElement("style");o.type="text/css",o.innerHTML=".typewrite > .wrap { border-right: 0.08em solid #fff}",document.body.appendChild(o)},AOS.init({startEvent:"DOMContentLoaded"}),$(document).ready(function(){$("#sliderDebt").slider({range:"min",animate:!0,value:5e5,min:1e5,max:435e4,step:1e3,slide:function(e,t){t=numberWithCommas(t=t.value);$("#debtInput").val(t)}}),$("#debtInput").val($("#sliderDebt").slider("option","value")),$("#debtInput").change(function(){$("#sliderDebt").slider("value",$(this).val())}),$("#sliderTime").slider({range:"min",animate:!0,value:3,min:1,max:8,step:1,slide:function(e,t){var n=t.value;switch(n){case 1:n="".concat(n," год");break;case 2:case 3:case 4:n="".concat(n," года");break;default:n="".concat(n," лет")}$("#timeInput").val(n)}}),$("#timeInput").val($("#sliderTime").slider("option","value"));var e=$("#timeInput").val(),e="".concat(e," года");$("#timeInput").val(e),$("#timeInput").change(function(){$("#sliderTime").slider("value",$(this).val())}),$("#sliderIncome").slider({range:"min",animate:!0,value:3e4,min:1e4,max:5e5,step:5e3,slide:function(e,t){t=numberWithCommas(t=t.value);$("#incomeInput").val(t)}}),$("#incomeInput").val($("#sliderIncome").slider("option","value")),$("#incomeInput").change(function(){$("#sliderIncome").slider("value",$(this).val())}),$("#sliderInvest").slider({range:"min",animate:!0,value:1e5,min:0,max:4e5,step:1e3,slide:function(e,t){t=numberWithCommas(t=t.value);$("#investInput").val(t)}}),$("#investInput").val($("#sliderInvest").slider("option","value")),$("#investInput").change(function(){$("#sliderInvest").slider("value",$(this).val())})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
